// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`ConfigMenu should render correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <ConfigMenu
    colorStayChecked={false}
    defaultPlayChecked={true}
    isPlaying={true}
    onBgOptionChange={[MockFunction]}
    onColorStayChange={[MockFunction]}
    onDefaultPlayChange={[MockFunction]}
    onPlayPauseSelect={[MockFunction]}
    onSaveSelect={[MockFunction]}
    selected="test"
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "checkPropTypes": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <Popover
        animationDuration={300}
        bringFocusInside={false}
        content={
          <Menu>
            <withTheme(MenuOptionsGroup)
              onChange={[MockFunction]}
              options={
                Array [
                  Object {
                    "label": "Waves",
                    "value": "waves",
                  },
                  Object {
                    "label": "Blobs",
                    "value": "blobs",
                  },
                ]
              }
              selected="test"
              title="背景"
            />
            <MenuDivider />
            <MenuGroup
              title="操作"
            >
              <withTheme(MenuItem)
                icon="download"
                intent="success"
                onSelect={[MockFunction]}
                secondaryText="Alt + S"
              >
                保存背景
              </withTheme(MenuItem)>
              <withTheme(MenuItem)
                icon="pause"
                intent="success"
                onSelect={[MockFunction]}
                secondaryText="Space"
              >
                暂停动画
              </withTheme(MenuItem)>
            </MenuGroup>
            <MenuDivider />
            <MenuGroup
              title="设置"
            >
              <withTheme(MenuItem)
                secondaryText="默认播放动画"
              >
                <withTheme(Switch)
                  checked={true}
                  onChange={[MockFunction]}
                />
              </withTheme(MenuItem)>
            </MenuGroup>
            <MenuDivider />
            <MenuGroup
              title="搜索引擎"
            >
              <div
                style={
                  Object {
                    "margin": 16,
                  }
                }
              >
                <SegmentedControl
                  height={32}
                  options={
                    Array [
                      Object {
                        "label": "Google",
                        "value": "https://www.google.com/search?q=",
                      },
                      Object {
                        "label": "Baidu",
                        "value": "https://www.baidu.com/s?wd=",
                      },
                      Object {
                        "label": "Bing",
                        "value": "https://www.bing.com/search?q=",
                      },
                    ]
                  }
                  width={300}
                />
              </div>
            </MenuGroup>
            <MenuDivider />
            <div
              style={
                Object {
                  "height": 50,
                }
              }
            >
              <withTheme(Text)
                color="muted"
                lineHeight="50px"
                margin={20}
              >
                本扩展使用了
                <a
                  href="https://www.jinrishici.com/"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  今日诗词 API
                </a>
                ，感谢您的支持和喜爱!
              </withTheme(Text)>
            </div>
          </Menu>
        }
        minHeight={40}
        minWidth={200}
        onClose={[Function]}
        onCloseComplete={[Function]}
        onOpen={[Function]}
        onOpenComplete={[Function]}
        position="bottom-left"
      >
        <withTheme(Icon)
          className={false}
          color="white"
          icon="cog"
          id="menu-btn"
          size={20}
        />
      </Popover>,
      "data-html2canvas-ignore": true,
      "id": "menu",
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "animationDuration": 300,
        "bringFocusInside": false,
        "children": <withTheme(Icon)
          className={false}
          color="white"
          icon="cog"
          id="menu-btn"
          size={20}
        />,
        "content": <Menu>
          <withTheme(MenuOptionsGroup)
            onChange={[MockFunction]}
            options={
              Array [
                Object {
                  "label": "Waves",
                  "value": "waves",
                },
                Object {
                  "label": "Blobs",
                  "value": "blobs",
                },
              ]
            }
            selected="test"
            title="背景"
          />
          <MenuDivider />
          <MenuGroup
            title="操作"
          >
            <withTheme(MenuItem)
              icon="download"
              intent="success"
              onSelect={[MockFunction]}
              secondaryText="Alt + S"
            >
              保存背景
            </withTheme(MenuItem)>
            <withTheme(MenuItem)
              icon="pause"
              intent="success"
              onSelect={[MockFunction]}
              secondaryText="Space"
            >
              暂停动画
            </withTheme(MenuItem)>
          </MenuGroup>
          <MenuDivider />
          <MenuGroup
            title="设置"
          >
            <withTheme(MenuItem)
              secondaryText="默认播放动画"
            >
              <withTheme(Switch)
                checked={true}
                onChange={[MockFunction]}
              />
            </withTheme(MenuItem)>
          </MenuGroup>
          <MenuDivider />
          <MenuGroup
            title="搜索引擎"
          >
            <div
              style={
                Object {
                  "margin": 16,
                }
              }
            >
              <SegmentedControl
                height={32}
                options={
                  Array [
                    Object {
                      "label": "Google",
                      "value": "https://www.google.com/search?q=",
                    },
                    Object {
                      "label": "Baidu",
                      "value": "https://www.baidu.com/s?wd=",
                    },
                    Object {
                      "label": "Bing",
                      "value": "https://www.bing.com/search?q=",
                    },
                  ]
                }
                width={300}
              />
            </div>
          </MenuGroup>
          <MenuDivider />
          <div
            style={
              Object {
                "height": 50,
              }
            }
          >
            <withTheme(Text)
              color="muted"
              lineHeight="50px"
              margin={20}
            >
              本扩展使用了
              <a
                href="https://www.jinrishici.com/"
                rel="noopener noreferrer"
                target="_blank"
              >
                今日诗词 API
              </a>
              ，感谢您的支持和喜爱!
            </withTheme(Text)>
          </div>
        </Menu>,
        "minHeight": 40,
        "minWidth": 200,
        "onClose": [Function],
        "onCloseComplete": [Function],
        "onOpen": [Function],
        "onOpenComplete": [Function],
        "position": "bottom-left",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "className": false,
          "color": "white",
          "icon": "cog",
          "id": "menu-btn",
          "size": 20,
        },
        "ref": null,
        "rendered": null,
        "type": [Function],
      },
      "type": [Function],
    },
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <Popover
          animationDuration={300}
          bringFocusInside={false}
          content={
            <Menu>
              <withTheme(MenuOptionsGroup)
                onChange={[MockFunction]}
                options={
                  Array [
                    Object {
                      "label": "Waves",
                      "value": "waves",
                    },
                    Object {
                      "label": "Blobs",
                      "value": "blobs",
                    },
                  ]
                }
                selected="test"
                title="背景"
              />
              <MenuDivider />
              <MenuGroup
                title="操作"
              >
                <withTheme(MenuItem)
                  icon="download"
                  intent="success"
                  onSelect={[MockFunction]}
                  secondaryText="Alt + S"
                >
                  保存背景
                </withTheme(MenuItem)>
                <withTheme(MenuItem)
                  icon="pause"
                  intent="success"
                  onSelect={[MockFunction]}
                  secondaryText="Space"
                >
                  暂停动画
                </withTheme(MenuItem)>
              </MenuGroup>
              <MenuDivider />
              <MenuGroup
                title="设置"
              >
                <withTheme(MenuItem)
                  secondaryText="默认播放动画"
                >
                  <withTheme(Switch)
                    checked={true}
                    onChange={[MockFunction]}
                  />
                </withTheme(MenuItem)>
              </MenuGroup>
              <MenuDivider />
              <MenuGroup
                title="搜索引擎"
              >
                <div
                  style={
                    Object {
                      "margin": 16,
                    }
                  }
                >
                  <SegmentedControl
                    height={32}
                    options={
                      Array [
                        Object {
                          "label": "Google",
                          "value": "https://www.google.com/search?q=",
                        },
                        Object {
                          "label": "Baidu",
                          "value": "https://www.baidu.com/s?wd=",
                        },
                        Object {
                          "label": "Bing",
                          "value": "https://www.bing.com/search?q=",
                        },
                      ]
                    }
                    width={300}
                  />
                </div>
              </MenuGroup>
              <MenuDivider />
              <div
                style={
                  Object {
                    "height": 50,
                  }
                }
              >
                <withTheme(Text)
                  color="muted"
                  lineHeight="50px"
                  margin={20}
                >
                  本扩展使用了
                  <a
                    href="https://www.jinrishici.com/"
                    rel="noopener noreferrer"
                    target="_blank"
                  >
                    今日诗词 API
                  </a>
                  ，感谢您的支持和喜爱!
                </withTheme(Text)>
              </div>
            </Menu>
          }
          minHeight={40}
          minWidth={200}
          onClose={[Function]}
          onCloseComplete={[Function]}
          onOpen={[Function]}
          onOpenComplete={[Function]}
          position="bottom-left"
        >
          <withTheme(Icon)
            className={false}
            color="white"
            icon="cog"
            id="menu-btn"
            size={20}
          />
        </Popover>,
        "data-html2canvas-ignore": true,
        "id": "menu",
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "class",
        "props": Object {
          "animationDuration": 300,
          "bringFocusInside": false,
          "children": <withTheme(Icon)
            className={false}
            color="white"
            icon="cog"
            id="menu-btn"
            size={20}
          />,
          "content": <Menu>
            <withTheme(MenuOptionsGroup)
              onChange={[MockFunction]}
              options={
                Array [
                  Object {
                    "label": "Waves",
                    "value": "waves",
                  },
                  Object {
                    "label": "Blobs",
                    "value": "blobs",
                  },
                ]
              }
              selected="test"
              title="背景"
            />
            <MenuDivider />
            <MenuGroup
              title="操作"
            >
              <withTheme(MenuItem)
                icon="download"
                intent="success"
                onSelect={[MockFunction]}
                secondaryText="Alt + S"
              >
                保存背景
              </withTheme(MenuItem)>
              <withTheme(MenuItem)
                icon="pause"
                intent="success"
                onSelect={[MockFunction]}
                secondaryText="Space"
              >
                暂停动画
              </withTheme(MenuItem)>
            </MenuGroup>
            <MenuDivider />
            <MenuGroup
              title="设置"
            >
              <withTheme(MenuItem)
                secondaryText="默认播放动画"
              >
                <withTheme(Switch)
                  checked={true}
                  onChange={[MockFunction]}
                />
              </withTheme(MenuItem)>
            </MenuGroup>
            <MenuDivider />
            <MenuGroup
              title="搜索引擎"
            >
              <div
                style={
                  Object {
                    "margin": 16,
                  }
                }
              >
                <SegmentedControl
                  height={32}
                  options={
                    Array [
                      Object {
                        "label": "Google",
                        "value": "https://www.google.com/search?q=",
                      },
                      Object {
                        "label": "Baidu",
                        "value": "https://www.baidu.com/s?wd=",
                      },
                      Object {
                        "label": "Bing",
                        "value": "https://www.bing.com/search?q=",
                      },
                    ]
                  }
                  width={300}
                />
              </div>
            </MenuGroup>
            <MenuDivider />
            <div
              style={
                Object {
                  "height": 50,
                }
              }
            >
              <withTheme(Text)
                color="muted"
                lineHeight="50px"
                margin={20}
              >
                本扩展使用了
                <a
                  href="https://www.jinrishici.com/"
                  rel="noopener noreferrer"
                  target="_blank"
                >
                  今日诗词 API
                </a>
                ，感谢您的支持和喜爱!
              </withTheme(Text)>
            </div>
          </Menu>,
          "minHeight": 40,
          "minWidth": 200,
          "onClose": [Function],
          "onCloseComplete": [Function],
          "onOpen": [Function],
          "onOpenComplete": [Function],
          "position": "bottom-left",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "class",
          "props": Object {
            "className": false,
            "color": "white",
            "icon": "cog",
            "id": "menu-btn",
            "size": 20,
          },
          "ref": null,
          "rendered": null,
          "type": [Function],
        },
        "type": [Function],
      },
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "legacyContextMode": "parent",
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getChildContext": Object {
            "calledByRenderer": false,
          },
          "getDerivedStateFromError": true,
          "getDerivedStateFromProps": Object {
            "hasShouldComponentUpdateBug": false,
          },
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
  Symbol(enzyme.__childContext__): null,
}
`;
